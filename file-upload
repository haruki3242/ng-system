function processAllAttachmentsAndDelete() {
  var threads = GmailApp.getInboxThreads(); // すべてのスレッドを取得
  for (var i = 0; i < threads.length; i++) {
    var thread = threads[i];
    var messages = thread.getMessages();
    for (var j = 0; j < messages.length; j++) {
      var message = messages[j];
      var attachments = message.getAttachments();
      if (attachments.length > 0) {
        for (var k = 0; k < attachments.length; k++) {
          var attachment = attachments[k];
          var fileName = attachment.getName();
          var blob = attachment.copyBlob();
          
          // 新しいファイル名を生成（元のファイル名 + タイムスタンプ）
          var currentDate = new Date();
          var timestamp = Utilities.formatDate(currentDate, Session.getScriptTimeZone(), 'yyyyMMddHHmmss');
          var newFileName = timestamp + '_' + fileName;
          
          // ここでダウンロードしたファイルを処理する（仕様書みてや）（WebDAVにアップロード）
          var webDAVUrl = 'ここは仕様書にあるで' + newFileName; // WebDAVサーバーのアップロードURLを指定
          var username = 'ここは仕様書に書いてる通りやで'; // WebDAVのユーザー名
          var password = 'ここも仕様書に書いてる通りやで'; // パスワード
          
          var options = {
            method: 'put',
            payload: blob,
            headers: {
              Authorization: 'Basic ' + Utilities.base64Encode(username + ':' + password)
            }
          };
          
          var response = UrlFetchApp.fetch(webDAVUrl, options);
          
          if (response.getResponseCode() == 200) {
            Logger.log('File uploaded successfully.');
            
            // 処理が終わったら、添付ファイルを削除する
            attachment.deleteBlob();
          } else {
            Logger.log('Error uploading file. Response code: ' + response.getResponseCode());
            Logger.log('Response body: ' + response.getContentText());
          }
        }
        
        // メールを削除する
        message.moveToTrash();
      }
    }
  }
}
